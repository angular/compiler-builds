/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
const CORE = '@angular/core';
export class Identifiers {
    /* Methods */
    static { this.NEW_METHOD = 'factory'; }
    static { this.TRANSFORM_METHOD = 'transform'; }
    static { this.PATCH_DEPS = 'patchedDeps'; }
    static { this.core = { name: null, moduleName: CORE }; }
    /* Instructions */
    static { this.namespaceHTML = { name: 'ɵɵnamespaceHTML', moduleName: CORE }; }
    static { this.namespaceMathML = { name: 'ɵɵnamespaceMathML', moduleName: CORE }; }
    static { this.namespaceSVG = { name: 'ɵɵnamespaceSVG', moduleName: CORE }; }
    static { this.element = { name: 'ɵɵelement', moduleName: CORE }; }
    static { this.elementStart = { name: 'ɵɵelementStart', moduleName: CORE }; }
    static { this.elementEnd = { name: 'ɵɵelementEnd', moduleName: CORE }; }
    static { this.advance = { name: 'ɵɵadvance', moduleName: CORE }; }
    static { this.syntheticHostProperty = { name: 'ɵɵsyntheticHostProperty', moduleName: CORE }; }
    static { this.syntheticHostListener = { name: 'ɵɵsyntheticHostListener', moduleName: CORE }; }
    static { this.attribute = { name: 'ɵɵattribute', moduleName: CORE }; }
    static { this.attributeInterpolate1 = { name: 'ɵɵattributeInterpolate1', moduleName: CORE }; }
    static { this.attributeInterpolate2 = { name: 'ɵɵattributeInterpolate2', moduleName: CORE }; }
    static { this.attributeInterpolate3 = { name: 'ɵɵattributeInterpolate3', moduleName: CORE }; }
    static { this.attributeInterpolate4 = { name: 'ɵɵattributeInterpolate4', moduleName: CORE }; }
    static { this.attributeInterpolate5 = { name: 'ɵɵattributeInterpolate5', moduleName: CORE }; }
    static { this.attributeInterpolate6 = { name: 'ɵɵattributeInterpolate6', moduleName: CORE }; }
    static { this.attributeInterpolate7 = { name: 'ɵɵattributeInterpolate7', moduleName: CORE }; }
    static { this.attributeInterpolate8 = { name: 'ɵɵattributeInterpolate8', moduleName: CORE }; }
    static { this.attributeInterpolateV = { name: 'ɵɵattributeInterpolateV', moduleName: CORE }; }
    static { this.classProp = { name: 'ɵɵclassProp', moduleName: CORE }; }
    static { this.elementContainerStart = { name: 'ɵɵelementContainerStart', moduleName: CORE }; }
    static { this.elementContainerEnd = { name: 'ɵɵelementContainerEnd', moduleName: CORE }; }
    static { this.elementContainer = { name: 'ɵɵelementContainer', moduleName: CORE }; }
    static { this.styleMap = { name: 'ɵɵstyleMap', moduleName: CORE }; }
    static { this.styleMapInterpolate1 = { name: 'ɵɵstyleMapInterpolate1', moduleName: CORE }; }
    static { this.styleMapInterpolate2 = { name: 'ɵɵstyleMapInterpolate2', moduleName: CORE }; }
    static { this.styleMapInterpolate3 = { name: 'ɵɵstyleMapInterpolate3', moduleName: CORE }; }
    static { this.styleMapInterpolate4 = { name: 'ɵɵstyleMapInterpolate4', moduleName: CORE }; }
    static { this.styleMapInterpolate5 = { name: 'ɵɵstyleMapInterpolate5', moduleName: CORE }; }
    static { this.styleMapInterpolate6 = { name: 'ɵɵstyleMapInterpolate6', moduleName: CORE }; }
    static { this.styleMapInterpolate7 = { name: 'ɵɵstyleMapInterpolate7', moduleName: CORE }; }
    static { this.styleMapInterpolate8 = { name: 'ɵɵstyleMapInterpolate8', moduleName: CORE }; }
    static { this.styleMapInterpolateV = { name: 'ɵɵstyleMapInterpolateV', moduleName: CORE }; }
    static { this.classMap = { name: 'ɵɵclassMap', moduleName: CORE }; }
    static { this.classMapInterpolate1 = { name: 'ɵɵclassMapInterpolate1', moduleName: CORE }; }
    static { this.classMapInterpolate2 = { name: 'ɵɵclassMapInterpolate2', moduleName: CORE }; }
    static { this.classMapInterpolate3 = { name: 'ɵɵclassMapInterpolate3', moduleName: CORE }; }
    static { this.classMapInterpolate4 = { name: 'ɵɵclassMapInterpolate4', moduleName: CORE }; }
    static { this.classMapInterpolate5 = { name: 'ɵɵclassMapInterpolate5', moduleName: CORE }; }
    static { this.classMapInterpolate6 = { name: 'ɵɵclassMapInterpolate6', moduleName: CORE }; }
    static { this.classMapInterpolate7 = { name: 'ɵɵclassMapInterpolate7', moduleName: CORE }; }
    static { this.classMapInterpolate8 = { name: 'ɵɵclassMapInterpolate8', moduleName: CORE }; }
    static { this.classMapInterpolateV = { name: 'ɵɵclassMapInterpolateV', moduleName: CORE }; }
    static { this.styleProp = { name: 'ɵɵstyleProp', moduleName: CORE }; }
    static { this.stylePropInterpolate1 = { name: 'ɵɵstylePropInterpolate1', moduleName: CORE }; }
    static { this.stylePropInterpolate2 = { name: 'ɵɵstylePropInterpolate2', moduleName: CORE }; }
    static { this.stylePropInterpolate3 = { name: 'ɵɵstylePropInterpolate3', moduleName: CORE }; }
    static { this.stylePropInterpolate4 = { name: 'ɵɵstylePropInterpolate4', moduleName: CORE }; }
    static { this.stylePropInterpolate5 = { name: 'ɵɵstylePropInterpolate5', moduleName: CORE }; }
    static { this.stylePropInterpolate6 = { name: 'ɵɵstylePropInterpolate6', moduleName: CORE }; }
    static { this.stylePropInterpolate7 = { name: 'ɵɵstylePropInterpolate7', moduleName: CORE }; }
    static { this.stylePropInterpolate8 = { name: 'ɵɵstylePropInterpolate8', moduleName: CORE }; }
    static { this.stylePropInterpolateV = { name: 'ɵɵstylePropInterpolateV', moduleName: CORE }; }
    static { this.nextContext = { name: 'ɵɵnextContext', moduleName: CORE }; }
    static { this.resetView = { name: 'ɵɵresetView', moduleName: CORE }; }
    static { this.templateCreate = { name: 'ɵɵtemplate', moduleName: CORE }; }
    static { this.defer = { name: 'ɵɵdefer', moduleName: CORE }; }
    static { this.deferWhen = { name: 'ɵɵdeferWhen', moduleName: CORE }; }
    static { this.deferOnIdle = { name: 'ɵɵdeferOnIdle', moduleName: CORE }; }
    static { this.deferOnImmediate = { name: 'ɵɵdeferOnImmediate', moduleName: CORE }; }
    static { this.deferOnTimer = { name: 'ɵɵdeferOnTimer', moduleName: CORE }; }
    static { this.deferOnHover = { name: 'ɵɵdeferOnHover', moduleName: CORE }; }
    static { this.deferOnInteraction = { name: 'ɵɵdeferOnInteraction', moduleName: CORE }; }
    static { this.deferOnViewport = { name: 'ɵɵdeferOnViewport', moduleName: CORE }; }
    static { this.deferPrefetchWhen = { name: 'ɵɵdeferPrefetchWhen', moduleName: CORE }; }
    static { this.deferPrefetchOnIdle = { name: 'ɵɵdeferPrefetchOnIdle', moduleName: CORE }; }
    static { this.deferPrefetchOnImmediate = { name: 'ɵɵdeferPrefetchOnImmediate', moduleName: CORE }; }
    static { this.deferPrefetchOnTimer = { name: 'ɵɵdeferPrefetchOnTimer', moduleName: CORE }; }
    static { this.deferPrefetchOnHover = { name: 'ɵɵdeferPrefetchOnHover', moduleName: CORE }; }
    static { this.deferPrefetchOnInteraction = { name: 'ɵɵdeferPrefetchOnInteraction', moduleName: CORE }; }
    static { this.deferPrefetchOnViewport = { name: 'ɵɵdeferPrefetchOnViewport', moduleName: CORE }; }
    static { this.deferEnableTimerScheduling = { name: 'ɵɵdeferEnableTimerScheduling', moduleName: CORE }; }
    static { this.conditional = { name: 'ɵɵconditional', moduleName: CORE }; }
    static { this.repeater = { name: 'ɵɵrepeater', moduleName: CORE }; }
    static { this.repeaterCreate = { name: 'ɵɵrepeaterCreate', moduleName: CORE }; }
    static { this.repeaterTrackByIndex = { name: 'ɵɵrepeaterTrackByIndex', moduleName: CORE }; }
    static { this.repeaterTrackByIdentity = { name: 'ɵɵrepeaterTrackByIdentity', moduleName: CORE }; }
    static { this.componentInstance = { name: 'ɵɵcomponentInstance', moduleName: CORE }; }
    static { this.text = { name: 'ɵɵtext', moduleName: CORE }; }
    static { this.enableBindings = { name: 'ɵɵenableBindings', moduleName: CORE }; }
    static { this.disableBindings = { name: 'ɵɵdisableBindings', moduleName: CORE }; }
    static { this.getCurrentView = { name: 'ɵɵgetCurrentView', moduleName: CORE }; }
    static { this.textInterpolate = { name: 'ɵɵtextInterpolate', moduleName: CORE }; }
    static { this.textInterpolate1 = { name: 'ɵɵtextInterpolate1', moduleName: CORE }; }
    static { this.textInterpolate2 = { name: 'ɵɵtextInterpolate2', moduleName: CORE }; }
    static { this.textInterpolate3 = { name: 'ɵɵtextInterpolate3', moduleName: CORE }; }
    static { this.textInterpolate4 = { name: 'ɵɵtextInterpolate4', moduleName: CORE }; }
    static { this.textInterpolate5 = { name: 'ɵɵtextInterpolate5', moduleName: CORE }; }
    static { this.textInterpolate6 = { name: 'ɵɵtextInterpolate6', moduleName: CORE }; }
    static { this.textInterpolate7 = { name: 'ɵɵtextInterpolate7', moduleName: CORE }; }
    static { this.textInterpolate8 = { name: 'ɵɵtextInterpolate8', moduleName: CORE }; }
    static { this.textInterpolateV = { name: 'ɵɵtextInterpolateV', moduleName: CORE }; }
    static { this.restoreView = { name: 'ɵɵrestoreView', moduleName: CORE }; }
    static { this.pureFunction0 = { name: 'ɵɵpureFunction0', moduleName: CORE }; }
    static { this.pureFunction1 = { name: 'ɵɵpureFunction1', moduleName: CORE }; }
    static { this.pureFunction2 = { name: 'ɵɵpureFunction2', moduleName: CORE }; }
    static { this.pureFunction3 = { name: 'ɵɵpureFunction3', moduleName: CORE }; }
    static { this.pureFunction4 = { name: 'ɵɵpureFunction4', moduleName: CORE }; }
    static { this.pureFunction5 = { name: 'ɵɵpureFunction5', moduleName: CORE }; }
    static { this.pureFunction6 = { name: 'ɵɵpureFunction6', moduleName: CORE }; }
    static { this.pureFunction7 = { name: 'ɵɵpureFunction7', moduleName: CORE }; }
    static { this.pureFunction8 = { name: 'ɵɵpureFunction8', moduleName: CORE }; }
    static { this.pureFunctionV = { name: 'ɵɵpureFunctionV', moduleName: CORE }; }
    static { this.pipeBind1 = { name: 'ɵɵpipeBind1', moduleName: CORE }; }
    static { this.pipeBind2 = { name: 'ɵɵpipeBind2', moduleName: CORE }; }
    static { this.pipeBind3 = { name: 'ɵɵpipeBind3', moduleName: CORE }; }
    static { this.pipeBind4 = { name: 'ɵɵpipeBind4', moduleName: CORE }; }
    static { this.pipeBindV = { name: 'ɵɵpipeBindV', moduleName: CORE }; }
    static { this.hostProperty = { name: 'ɵɵhostProperty', moduleName: CORE }; }
    static { this.property = { name: 'ɵɵproperty', moduleName: CORE }; }
    static { this.propertyInterpolate = { name: 'ɵɵpropertyInterpolate', moduleName: CORE }; }
    static { this.propertyInterpolate1 = { name: 'ɵɵpropertyInterpolate1', moduleName: CORE }; }
    static { this.propertyInterpolate2 = { name: 'ɵɵpropertyInterpolate2', moduleName: CORE }; }
    static { this.propertyInterpolate3 = { name: 'ɵɵpropertyInterpolate3', moduleName: CORE }; }
    static { this.propertyInterpolate4 = { name: 'ɵɵpropertyInterpolate4', moduleName: CORE }; }
    static { this.propertyInterpolate5 = { name: 'ɵɵpropertyInterpolate5', moduleName: CORE }; }
    static { this.propertyInterpolate6 = { name: 'ɵɵpropertyInterpolate6', moduleName: CORE }; }
    static { this.propertyInterpolate7 = { name: 'ɵɵpropertyInterpolate7', moduleName: CORE }; }
    static { this.propertyInterpolate8 = { name: 'ɵɵpropertyInterpolate8', moduleName: CORE }; }
    static { this.propertyInterpolateV = { name: 'ɵɵpropertyInterpolateV', moduleName: CORE }; }
    static { this.i18n = { name: 'ɵɵi18n', moduleName: CORE }; }
    static { this.i18nAttributes = { name: 'ɵɵi18nAttributes', moduleName: CORE }; }
    static { this.i18nExp = { name: 'ɵɵi18nExp', moduleName: CORE }; }
    static { this.i18nStart = { name: 'ɵɵi18nStart', moduleName: CORE }; }
    static { this.i18nEnd = { name: 'ɵɵi18nEnd', moduleName: CORE }; }
    static { this.i18nApply = { name: 'ɵɵi18nApply', moduleName: CORE }; }
    static { this.i18nPostprocess = { name: 'ɵɵi18nPostprocess', moduleName: CORE }; }
    static { this.pipe = { name: 'ɵɵpipe', moduleName: CORE }; }
    static { this.projection = { name: 'ɵɵprojection', moduleName: CORE }; }
    static { this.projectionDef = { name: 'ɵɵprojectionDef', moduleName: CORE }; }
    static { this.reference = { name: 'ɵɵreference', moduleName: CORE }; }
    static { this.shallowReference = { name: 'ɵɵshallowReference', moduleName: CORE }; }
    static { this.inject = { name: 'ɵɵinject', moduleName: CORE }; }
    static { this.injectAttribute = { name: 'ɵɵinjectAttribute', moduleName: CORE }; }
    static { this.directiveInject = { name: 'ɵɵdirectiveInject', moduleName: CORE }; }
    static { this.invalidFactory = { name: 'ɵɵinvalidFactory', moduleName: CORE }; }
    static { this.invalidFactoryDep = { name: 'ɵɵinvalidFactoryDep', moduleName: CORE }; }
    static { this.templateRefExtractor = { name: 'ɵɵtemplateRefExtractor', moduleName: CORE }; }
    static { this.forwardRef = { name: 'forwardRef', moduleName: CORE }; }
    static { this.resolveForwardRef = { name: 'resolveForwardRef', moduleName: CORE }; }
    static { this.ɵɵdefineInjectable = { name: 'ɵɵdefineInjectable', moduleName: CORE }; }
    static { this.declareInjectable = { name: 'ɵɵngDeclareInjectable', moduleName: CORE }; }
    static { this.InjectableDeclaration = { name: 'ɵɵInjectableDeclaration', moduleName: CORE }; }
    static { this.resolveWindow = { name: 'ɵɵresolveWindow', moduleName: CORE }; }
    static { this.resolveDocument = { name: 'ɵɵresolveDocument', moduleName: CORE }; }
    static { this.resolveBody = { name: 'ɵɵresolveBody', moduleName: CORE }; }
    static { this.getComponentDepsFactory = { name: 'ɵɵgetComponentDepsFactory', moduleName: CORE }; }
    static { this.defineComponent = { name: 'ɵɵdefineComponent', moduleName: CORE }; }
    static { this.declareComponent = { name: 'ɵɵngDeclareComponent', moduleName: CORE }; }
    static { this.setComponentScope = { name: 'ɵɵsetComponentScope', moduleName: CORE }; }
    static { this.ChangeDetectionStrategy = {
        name: 'ChangeDetectionStrategy',
        moduleName: CORE,
    }; }
    static { this.ViewEncapsulation = {
        name: 'ViewEncapsulation',
        moduleName: CORE,
    }; }
    static { this.ComponentDeclaration = {
        name: 'ɵɵComponentDeclaration',
        moduleName: CORE,
    }; }
    static { this.FactoryDeclaration = {
        name: 'ɵɵFactoryDeclaration',
        moduleName: CORE,
    }; }
    static { this.declareFactory = { name: 'ɵɵngDeclareFactory', moduleName: CORE }; }
    static { this.FactoryTarget = { name: 'ɵɵFactoryTarget', moduleName: CORE }; }
    static { this.defineDirective = { name: 'ɵɵdefineDirective', moduleName: CORE }; }
    static { this.declareDirective = { name: 'ɵɵngDeclareDirective', moduleName: CORE }; }
    static { this.DirectiveDeclaration = {
        name: 'ɵɵDirectiveDeclaration',
        moduleName: CORE,
    }; }
    static { this.InjectorDef = { name: 'ɵɵInjectorDef', moduleName: CORE }; }
    static { this.InjectorDeclaration = { name: 'ɵɵInjectorDeclaration', moduleName: CORE }; }
    static { this.defineInjector = { name: 'ɵɵdefineInjector', moduleName: CORE }; }
    static { this.declareInjector = { name: 'ɵɵngDeclareInjector', moduleName: CORE }; }
    static { this.NgModuleDeclaration = {
        name: 'ɵɵNgModuleDeclaration',
        moduleName: CORE,
    }; }
    static { this.ModuleWithProviders = {
        name: 'ModuleWithProviders',
        moduleName: CORE,
    }; }
    static { this.defineNgModule = { name: 'ɵɵdefineNgModule', moduleName: CORE }; }
    static { this.declareNgModule = { name: 'ɵɵngDeclareNgModule', moduleName: CORE }; }
    static { this.setNgModuleScope = { name: 'ɵɵsetNgModuleScope', moduleName: CORE }; }
    static { this.registerNgModuleType = { name: 'ɵɵregisterNgModuleType', moduleName: CORE }; }
    static { this.PipeDeclaration = { name: 'ɵɵPipeDeclaration', moduleName: CORE }; }
    static { this.definePipe = { name: 'ɵɵdefinePipe', moduleName: CORE }; }
    static { this.declarePipe = { name: 'ɵɵngDeclarePipe', moduleName: CORE }; }
    static { this.declareClassMetadata = { name: 'ɵɵngDeclareClassMetadata', moduleName: CORE }; }
    static { this.setClassMetadata = { name: 'ɵsetClassMetadata', moduleName: CORE }; }
    static { this.setClassMetadataAsync = { name: 'ɵsetClassMetadataAsync', moduleName: CORE }; }
    static { this.setClassDebugInfo = { name: 'ɵsetClassDebugInfo', moduleName: CORE }; }
    static { this.queryRefresh = { name: 'ɵɵqueryRefresh', moduleName: CORE }; }
    static { this.viewQuery = { name: 'ɵɵviewQuery', moduleName: CORE }; }
    static { this.loadQuery = { name: 'ɵɵloadQuery', moduleName: CORE }; }
    static { this.contentQuery = { name: 'ɵɵcontentQuery', moduleName: CORE }; }
    static { this.NgOnChangesFeature = { name: 'ɵɵNgOnChangesFeature', moduleName: CORE }; }
    static { this.InheritDefinitionFeature = { name: 'ɵɵInheritDefinitionFeature', moduleName: CORE }; }
    static { this.CopyDefinitionFeature = { name: 'ɵɵCopyDefinitionFeature', moduleName: CORE }; }
    static { this.StandaloneFeature = { name: 'ɵɵStandaloneFeature', moduleName: CORE }; }
    static { this.ProvidersFeature = { name: 'ɵɵProvidersFeature', moduleName: CORE }; }
    static { this.HostDirectivesFeature = { name: 'ɵɵHostDirectivesFeature', moduleName: CORE }; }
    static { this.InputTransformsFeatureFeature = { name: 'ɵɵInputTransformsFeature', moduleName: CORE }; }
    static { this.listener = { name: 'ɵɵlistener', moduleName: CORE }; }
    static { this.getInheritedFactory = {
        name: 'ɵɵgetInheritedFactory',
        moduleName: CORE,
    }; }
    // sanitization-related functions
    static { this.sanitizeHtml = { name: 'ɵɵsanitizeHtml', moduleName: CORE }; }
    static { this.sanitizeStyle = { name: 'ɵɵsanitizeStyle', moduleName: CORE }; }
    static { this.sanitizeResourceUrl = { name: 'ɵɵsanitizeResourceUrl', moduleName: CORE }; }
    static { this.sanitizeScript = { name: 'ɵɵsanitizeScript', moduleName: CORE }; }
    static { this.sanitizeUrl = { name: 'ɵɵsanitizeUrl', moduleName: CORE }; }
    static { this.sanitizeUrlOrResourceUrl = { name: 'ɵɵsanitizeUrlOrResourceUrl', moduleName: CORE }; }
    static { this.trustConstantHtml = { name: 'ɵɵtrustConstantHtml', moduleName: CORE }; }
    static { this.trustConstantResourceUrl = { name: 'ɵɵtrustConstantResourceUrl', moduleName: CORE }; }
    static { this.validateIframeAttribute = { name: 'ɵɵvalidateIframeAttribute', moduleName: CORE }; }
    // ## signal APIs
    // for type-checking
    static { this.getInputSignalWriteType = { name: 'ɵɵGetInputSignalWriteType', moduleName: CORE }; }
    static { this.propertyCreate = { name: 'ɵɵpropertyCreate', moduleName: CORE }; }
    static { this.stringifyInterpolation = { name: 'ɵɵstringifyInterpolation', moduleName: CORE }; }
    static { this.viewQueryCreate = { name: 'ɵɵviewQueryCreate', moduleName: CORE }; }
    static { this.contentQueryCreate = { name: 'ɵɵcontentQueryCreate', moduleName: CORE }; }
}
//# sourceMappingURL=data:application/json;base64,